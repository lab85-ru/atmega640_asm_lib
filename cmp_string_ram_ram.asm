;===========================================================================
;	сравнение двух строк обе в ОЗУ вход адресс X идем до 0х00
;						вторая в ОЗУ вход Y
;	r19 - длинна строки
;
;	выход r18 или бит С
;	r18=0	строки равны
;	r18<>0 строки различаются
;
;	C=0 строки равны
;	C<>0 строки различаются
;
;	Z=1 строки равны
;	Z=0 строки различаются
;===========================================================================
.cseg
/*cmp_string_ram_ram:
					clc							; еще флаг сравнения строк
					clr 	r18					; =0 значит строки равны
												; !=0 неравны значение кол-во различий

cmp_string_ram_ram1:

					ld		r16,x+				;Z берем первый or n символ из памяти(в цикле следующий символ)
				
;					cpi		r16,0x00
;					breq	cmp_string_ram_ram_exit		; конец проверке выходим

					ld		r17,y+				;Y берем первый or n символ из памяти(в цикле следующий символ)

					cp		r17,r16
					breq	cmp_string_ram_ram1
					inc		r18					; неравны +1

					rjmp 	cmp_string_ram_ram1
cmp_string_ram_ram_exit:

;	обрабатываем бит С по результатам сравния строк
					cpi 	r18,0x00
					breq	cmp_string_ram_ram_exit0
					sec		;установили бит С

cmp_string_ram_ram_exit0:


					ret*/
;=============================================================================
;===========================================================================
;	сравнение двух строк обе в ОЗУ вход адресс X идем до 0х00
;						вторая в ОЗУ вход Y
;	r19 - длинна строки
;
;	выход r18 или бит С
;	r18=0	строки равны
;	r18<>0 строки различаются
;===========================================================================
cmp_string_ram_ram:
					clr 	r18					; =0 значит строки равны
												; !=0 неравны значение кол-во различий

_cmp_string_r_r:

					ld		r16,x+				;X берем первый or n символ из памяти(в цикле следующий символ)
					ld		r17,y+				;Y берем первый or n символ из памяти(в цикле следующий символ)

					cp		r17,r16
					breq	_cmp_string_r_r1
					inc		r18					; неравны +1
_cmp_string_r_r1:
					dec		r19					; counter--

					cpi		r19,0x00
					brne	_cmp_string_r_r
				
					ret
;=============================================================================
