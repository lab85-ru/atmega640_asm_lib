;================================================================================================================
; начальная инициализация i2c
;================================================================================================================
i2c_init:
// i2c init
;		TWBR = 28;
;       TWCR = ( 1 << TWEN );

				ldi		r16,0x1f
				sts		TWBR,r16
				
				ldi		r16,( 1 << TWEN )
				sts		TWCR,r16

                ret 
;=========================================================================================================================

;================================================================================================================
; начинаем обработку, запуск !
;================================================================================================================
i2c_start:
				clr		r16
				sts		i2c_condition,r16

				ldi		r16,I2C_ST_WAIT
				sts		i2c_status,r16
				
				ldi		r16,(1 << TWSTA) | (1 << TWEN) | (1 << TWIE)
				sts		TWCR,r16

                ret 
;=========================================================================================================================
;================================================================================================================
; DS3232 write byte			R16=adr2   r17=data_write   r18=0 -пропустить ожидание завершения операции
;================================================================================================================
ds3232_write:
; цикл запись
;				ldi		r16,0xff
				sts		i2c_addr2,r16

;				ldi		r16,0xaa
				sts		i2c_write,r17

				ldi		r16,DS3232_ADDR
				sts		i2c_addr,r16

				ldi		r16,I2C_TYPE_RTC
				sts		i2c_ic_type,r16

				ldi		r16,I2C_OP_WRITE
				sts		i2c_operation,r16

				call	i2c_start


				cpi		r18,0x00
				brne	_ds3232_w_wait

ret

_ds3232_w_wait:
				lds		r16,i2c_status

				cpi		r16,I2C_ST_WAIT
				breq	_ds3232_w_wait

ret
;=========================================================================================================================

;================================================================================================================
; DS3232 read byte 		R16=adr2  r18=0 -пропустить ожидание завершения операции
;================================================================================================================
ds3232_read:
; цикл чтения
				sts		i2c_addr2,r16

				ldi		r16,DS3232_ADDR
				sts		i2c_addr,r16

				ldi		r16,I2C_TYPE_RTC
				sts		i2c_ic_type,r16

				ldi		r16,I2C_OP_READ
				sts		i2c_operation,r16

				call	i2c_start

				cpi		r18,0x00
				brne	_ds3232_r_wait

ret

_ds3232_r_wait:
				lds		r16,i2c_status

				cpi		r16,I2C_ST_WAIT
				breq	_ds3232_r_wait

ret

;=========================================================================================================
; TEST RTC
;=========================================================================================================
rtc_test:
					call		i2c_init

					call		lcd_clr			;очистили ЖКИ
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
					ldi			zl,low  (LCD_test_rtc * 2)
					ldi			zh,high (LCD_test_rtc * 2)
					call		lcd_write_string;вывод строки на экран
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

; цикл запись
					ldi			r16,0x0e		; adr
					ldi			r17,0xc0		; data write
;					;clr		r18				; пропустить ожидание завершения операции
					ldi			r18,0x01
					call		ds3232_write	; выставляем меандр 1 секунда !

					lds			r16,i2c_status
					cpi			r16,I2C_ST_ERROR
					breq		_rtc_t_test_rtc_error_ack
					jmp			_rtc_t_test_rtc


_rtc_t_test_rtc_error_ack:
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
					ldi			zl,low  (LCD_test_rtc_fault * 2)
					ldi			zh,high (LCD_test_rtc_fault * 2)
					call		lcd_write_string;вывод строки на экран
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
_rtc_t_test_rtc_fault:
					jmp	_rtc_t_test_rtc_fault

_rtc_t_test_rtc:
					call		rtc_time_out

					ldi			r16,0x01	;пауза 1.5 сек
					call		delay_sec

					lds			r16,rtc_count_l
					sts			rtc_timer_test,r16			; запомнили

					call		rtc_time_out

					ldi			r16,0x01	;пауза 1.5 сек
					call		delay_sec

					call		rtc_time_out

					ldi			r16,0x01	;пауза 1.5 сек
					call		delay_sec

					call		rtc_time_out

					ldi			r16,0x01	;пауза 1.5 сек
					call		delay_sec

					call		rtc_time_out

					ldi			r16,0x01	;пауза 1.5 сек
					call		delay_sec

					lds			r17,rtc_count_l
					lds			r16,rtc_timer_test			; взяли

					cp			r16,r17
					breq		_rtc_t_test_rtc_error_ack		; таймер не работает !!!!

ret

;=========================================================================================================
; Real Time out
;=========================================================================================================
rtc_time_out:
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
					ldi			zl,low  (LCD_test_rtc_time * 2)
					ldi			zh,high (LCD_test_rtc_time * 2)
					call		lcd_write_string;вывод строки на экран
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
; цикл чтения
					ldi			r16,0x02			; adr		часы
;					clr			r18					; пропустить ожидание завершения операции
					ldi			r18,0x01
					call		ds3232_read		  

					lds			r16,i2c_read
					andi		r16,0x3f		; переводим часы в режим 24 !
					mov			r17,r16

; цикл запись
					ldi			r16,0x02		; adr
;					ldi			r17,0xc0		; data write
;					;clr		r18				; пропустить ожидание завершения операции
					ldi			r18,0x01
					call		ds3232_write	; выставляем меандр 1 секунда !

; цикл чтения
					ldi			r16,0x02		; adr		часы
;					clr			r18				; пропустить ожидание завершения операции
					ldi			r18,0x01
					call		ds3232_read		  


					lds			r16,i2c_read
					swap		r16
					andi		r16,0x0f
					ori			r16,0x30
					
					mov			r17,r16
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
;					ldi			r17,'*'
					call		lcd_write_char
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
					lds			r16,i2c_read
;					swap		r16
					andi		r16,0x0f
					ori			r16,0x30
					
					mov			r17,r16
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
;					ldi			r17,'*'
					call		lcd_write_char
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
					ldi			r17,':'
					call		lcd_write_char
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
; цикл чтения
					ldi			r16,0x01		; adr		часы
;					clr			r18				; пропустить ожидание завершения операции
					ldi			r18,0x01
					call		ds3232_read		  

					lds			r16,i2c_read
					swap		r16
					andi		r16,0x0f
					ori			r16,0x30
					
					mov			r17,r16
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
;					ldi			r17,'*'
					call		lcd_write_char
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
					lds			r16,i2c_read
;					swap		r16
					andi		r16,0x0f
					ori			r16,0x30
					
					mov			r17,r16
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
;					ldi			r17,'*'
					call		lcd_write_char
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
					ldi			r17,':'
					call		lcd_write_char
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
; цикл чтения
					ldi			r16,0x00		; adr		часы
;					clr			r18				; пропустить ожидание завершения операции
					ldi			r18,0x01
					call		ds3232_read		  

					lds			r16,i2c_read
					swap		r16
					andi		r16,0x0f
					ori			r16,0x30
					
					mov			r17,r16
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
;					ldi			r17,'*'
					call		lcd_write_char
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
					lds			r16,i2c_read
;					swap		r16
					andi		r16,0x0f
					ori			r16,0x30
					
					mov			r17,r16
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
;					ldi			r17,'*'
					call		lcd_write_char
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
ret

;=========================================================================================================
; ADS1100 init
;=========================================================================================================
;.equ	ADS1100_REG_CFG

ads1100_init:

ret



;================================================================================================================
; ADS1100 read 3 byte 		r18=0 -пропустить ожидание завершения операции
;================================================================================================================
ads1100_read:
; цикл чтения
				ldi		r16,ADS1100_ADDR
				sts		i2c_addr,r16

				ldi		r16,I2C_TYPE_ADC
				sts		i2c_ic_type,r16

				ldi		r16,I2C_OP_READ
				sts		i2c_operation,r16

				call	i2c_start

				cpi		r18,0x00
				brne	_ads1100_r_wait

				ret

_ads1100_r_wait:
				lds		r16,i2c_status

				cpi		r16,I2C_ST_WAIT
				breq	_ads1100_r_wait

				ret
;================================================================================================================
; DS3232 write byte			r16=cfgwrite   r18=0 -пропустить ожидание завершения операции
;================================================================================================================
ads1100_write:
; цикл запись

;				ldi		r16,0xaa
				sts		i2c_write,r16

				ldi		r16,ADS1100_ADDR
				sts		i2c_addr,r16

				ldi		r16,I2C_TYPE_ADC
				sts		i2c_ic_type,r16

				ldi		r16,I2C_OP_WRITE
				sts		i2c_operation,r16

				call	i2c_start

				cpi		r18,0x00
				brne	_ads1100_w_wait

ret

_ads1100_w_wait:
				lds		r16,i2c_status

				cpi		r16,I2C_ST_WAIT
				breq	_ads1100_w_wait

ret
;=========================================================================================================================
